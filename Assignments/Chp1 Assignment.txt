1) What is Emmet?

-> It is plugin used by VS code &  also many other text editors which greatly improves html ,css workflow

-> By using it, you can use short expressions to generate HTML CSS


2) Difference between a Library and Framework?

-> Library is like building your home from the ground up. The house can be made in any style you prefer and the rooms can be arranged and decorated however you like. 
   Framework, on the other hand, is like buying a new home. The house is already built, so you don’t have to worry about building problems, but you can’t choose how the rooms are arranged.

-> When you have the power to call the code ,whenever you want-Library.
   Framework is actually calling your code.

-> Eg:  React.js require "react-router-dom" to be installed to implement routing.
      Angular.js has its own execution for routing.


3) What is CDN? Why do we use it?

-> A CDN (Content Delivery Network) is a group of servers spread out over many locations. 
   These servers store duplicate copies of data so that servers can fulfill data requests based on which servers are closest to the respective end-users.


4) Why is React known as React?

-> React is named React because of its ability to react to changes in data. When the data in a React component(file) changes, React will automatically re-render the component so that it reflects the new data. 
   This makes it easy to create performant user interfaces that always look up-to-date.


5) What is crossorigin in script tag?

-> 1] The crossorigin attribute is an optional attribute that can be added to a <script> element in an HTML file when adding a script from a third-party source, such as a Content Delivery Network (CDN). 
      The crossorigin attribute is used to specify how the script should be fetched, and what the server should include in the Access-Control-Allow-Origin header when the script is loaded from a different origin.

   2] The crossorigin attribute even has two possible values: anonymous and use-credentials.

     a) If the crossorigin attribute is set to 'anonymous', the server will not include any user credentials in the Access-Control-Allow-Origin header.
        This is useful when the script does not need to access any sensitive user data, and the server wants to prevent user credentials from being sent with the request.

     b) If the crossorigin attribute is set to 'use-credentials', the server will include user credentials in the Access-Control-Allow-Origin header.
        This is useful when the script needs to access sensitive user data, and the server wants to allow the script to do so.

   3] For example, the following <script> element includes a React library from a CDN and specifies that the script should be fetched anonymously:

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   <script src="https://unpkg.com/react@16/umd/react.production.min.js" crossorigin="anonymous"></script>   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


   4] This way, the server will not include any user credentials in the Access-Control-Allow-Origin header when the script is loaded.


                                      CORS & Access-Control-Allow-Origin

   ( The cross-origin resource sharing specification provides controlled relaxation of the same-origin policy for HTTP requests to one website domain from another through the use of a collection of HTTP headers.
    Browsers permit access to responses to cross-origin requests based upon these header instructions.

   What is the Access-Control-Allow-Origin response header?
   The Access-Control-Allow-Origin header is included in the response from one website to a request originating from another website, and identifies the permitted origin of the request. 
   A web browser compares the Access-Control-Allow-Origin with the requesting website's origin and permits access to the response if they match.)



6)  What is diference between React and ReactDOM

-> (In order to work with React in the browsers, we need to include 2 libraries: React and ReactDOM.)

   1] React library is responsible for creating views and ReactDOM library is responsible to actually render UI in the browser

   2] the react package is required to create and use components 

   3] react-dom contains react-dom/client and react-dom/server to render you app in the browser's DOM or inside a string (or a stream) on the server.
   
   4] React: React is a javascript library, designed for building better user interfaces.

      React-DOM: React-DOM is a complimentary library to React which glues React to the browser DOM

      Whenever we use component, classes, elements, etc., We’re using React
      and whenever we use methods like render() or findDOMNode() we’re using React-DOM.

   5] React is a JavaScript library for building reusuable components,
      while ReactDOM is a separate library that is used to render React components to the Document Object Model (DOM); that is a website.

   6] Since both are seperate libraries, they are called seperately as well.

        "<script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>"
        "<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>"
     
      The above one is just React, which is used to create the components.

      The below one is the ReactDOM, which is used to render the created components to the site.


 

7)   What is difference between react.development.js and react.production.js files via CDN?

->  react.development.js provides us extra features like debugging, hmr(Hot module reloading),etc that you might use while developing app with the help of bundlers like webpack, parcel, vite.
    This bundler bundles and minifies our code to be deployed on production.

    Production Build has ugly, minified(compressed) version of your javascript code, so this makes rendering of file on end user's browser very qu. 
    This improves the load time. React recommends using production mode while deploying the react app.
    It helps in optimizing performance. 



8)   What is async and defer? - see my Youtube video ;)


-> ( HTML parsing is basically: taking in HTML code and extracting relevant information like the title of the page, paragraphs in the page, headings in the page, links, bold text etc.)


async: 1) Async in script tag in JavaScript is a way to load scripts asynchronously.
          That means, if a script is async, it will be loaded independently of other scripts on the page, and will not block the page from loading.
       
       2) In Async, when the html is parsing,the script fetching is also done in parallel to it.
       3) Once the script has been fetched,the html pauses its parsing and the script is executed.
       4) After execution is completed, the html parsing resumes.
       5) If you have a page with several external scripts, loading them all asynchronously can speed up the page load time, because the browser can download and execute them in parallel.
       6) if u have scripts independent to each other,u can use async
       7) dependent scripts won't execute in proper order.

         To use async, simply add the async attribute to your script tag:

                   <script async src="script.js"></script>


defer: 1) in defer, the script fetch is done in parallel with html parsing.
       2) once the html parsing is completed then only the script is executed
       3) if u have several scripts dependent on each other,u can use defer

        To use defer, simply add the defer attribute to your script tag:

                <script defer src="script.js"></script>



